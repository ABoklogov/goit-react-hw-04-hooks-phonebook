{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactItem/ContactItem.js","components/ContactList/ContactList.js","components/App/App.js","index.js","components/ContactList/ContactItem/ContactItem.module.css","components/App/App.module.css"],"names":["module","exports","Filter","value","onChange","className","s","input","type","name","ContactForm","onSubmit","useState","setName","number","setNumber","handleNameChenge","e","target","form","preventDefault","text","pattern","title","required","btn","ContactItem","id","onDeleteContact","contactName","contactNumber","contactBtn","onClick","ContactList","contacts","contactList","map","contact","App","setContacts","filter","setFilter","useEffect","JSON","parse","localStorage","getItem","setItem","stringify","container","shortid","generate","some","el","alert","normalizedFilter","toLowerCase","includes","getVisibleContacts","idContact","prevContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1a26e79c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3o15s\",\"contact\":\"ContactList_contact__25whM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__3kqnQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__51FGf\",\"text\":\"ContactForm_text__3eezK\",\"input\":\"ContactForm_input__KF1v0\",\"btn\":\"ContactForm_btn__1Ga-H\"};","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        onChange={onChange}\n      />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactForm.module.css';\n\nconst ContactForm = ({ onSubmit }) => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleNameChenge = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(name, number);\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <p className={s.text}>Name</p>\n      <input\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        onChange={handleNameChenge}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n      <p className={s.text}>Number</p>\n      <input\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        onChange={handleNameChenge}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n      />\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport s from './ContactItem.module.css';\n\nconst ContactItem = ({ id, name, number, onDeleteContact }) => {\n  return (\n    <>\n      <p className={s.contactName}>{name}:</p>\n      <p className={s.contactNumber}>{number}</p>\n      <button className={s.contactBtn} onClick={() => onDeleteContact(id)}>\n        delete\n      </button>\n    </>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactItem;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport ContactItem from './ContactItem';\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} className={s.contact}>\n          <ContactItem\n            id={id}\n            name={name}\n            number={number}\n            onDeleteContact={onDeleteContact}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState, useEffect } from 'react';\nimport shortid from 'shortid';\nimport s from './App.module.css';\nimport Filter from '../Filter';\nimport ContactForm from '../ContactForm';\nimport ContactList from '../ContactList';\n\nconst App = () => {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  const addContact = (name, number) => {\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    const checkingContacts = el => el.name === name;\n\n    if (contacts.some(checkingContacts)) {\n      alert(`${name} is alreaby in contacts`);\n      return;\n    }\n    setContacts(contacts => [contact, ...contacts]);\n  };\n\n  const deleteContacts = idContact => {\n    setContacts(prevContacts =>\n      prevContacts.filter(contact => contact.id !== idContact),\n    );\n  };\n\n  const chengeFilter = e => {\n    setFilter(e.target.value);\n  };\n\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  useEffect(() => {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n    if (contacts) {\n      setContacts(contacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div className={s.container}>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmit={addContact} />\n\n      <h2>Contacts</h2>\n      <Filter value={filter} onChange={chengeFilter} />\n      <ContactList\n        contacts={getVisibleContacts()}\n        onDeleteContact={deleteContacts}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactName\":\"ContactItem_contactName__3El5j\",\"contactNumber\":\"ContactItem_contactNumber__243Zf\",\"contactBtn\":\"ContactItem_contactBtn__2itlZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2LLsr\"};"],"sourceRoot":""}